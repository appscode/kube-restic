# register to intercept stash CRD creates / updates
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: admission.stash.appscode.com
  labels:
    app: test-stash
webhooks:
- name: admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/admissionreviews
    caBundle: ${KUBE_CA}
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - "*"
  failurePolicy: Fail

---
# mutating webhook for deployment
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: admission.stash.appscode.com
  labels:
    app: test-stash
webhooks:
- name: admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/deployments
    caBundle: ${KUBE_CA}
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - "apps"
    - "extensions"
    apiVersions:
    - "*"
    resources:
    - "deployments"
  failurePolicy: Fail
- name: admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/daemonsets
    caBundle: ${KUBE_CA}
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - "apps"
    - "extensions"
    apiVersions:
    - "*"
    resources:
    - "daemonsets"
  failurePolicy: Fail
- name: admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/statefulsets
    caBundle: ${KUBE_CA}
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - "apps"
    apiVersions:
    - "*"
    resources:
    - "statefulsets"
  failurePolicy: Fail
- name: admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/replicationcontrollers
    caBundle: ${KUBE_CA}
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - ""
    apiVersions:
    - "*"
    resources:
    - "replicationcontrollers"
  failurePolicy: Fail
- name: admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/replicasets
    caBundle: ${KUBE_CA}
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - "apps"
    - "extensions"
    apiVersions:
    - "*"
    resources:
    - "replicasets"
  failurePolicy: Fail
---
apiVersion: v1
kind: Service
metadata:
  name: stash-local-apiserver
  namespace: ${STASH_NAMESPACE}
spec:
  ports:
  - name: api
    port: 443
    protocol: TCP
    targetPort: 8443
  type: ClusterIP
---
# To get to the host machine from the VM,
# the IP is 10.0.2.2 (by convention)
# ref: https://stackoverflow.com/questions/9537751/virtualbox-port-forward-from-guest-to-host
apiVersion: v1
kind: Endpoints
metadata:
  name: stash-local-apiserver
  namespace: ${STASH_NAMESPACE}
subsets:
- addresses:
  # list all external ips for this service
  - ip: 10.0.2.2
  ports:
  - name: api
    port: 8443
    protocol: TCP
---
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.admission.stash.appscode.com
  labels:
    app: test-stash
spec:
  insecureSkipTLSVerify: true
  group: admission.stash.appscode.com
  groupPriorityMinimum: 1000
  versionPriority: 15
  service:
    name: stash-local-apiserver
    namespace: ${STASH_NAMESPACE}

  version: v1alpha1
