name: e2e

on:
  issue_comment:
    types: [created]

jobs:
  kubernetes:
    name: Kubernetes
    runs-on: ubuntu-latest
    if: contains(github.event.issue.html_url, '/pull/') && github.event.comment.body == '/ok-to-test'
    strategy:
      matrix:
        k8s: [v1.12.10, v1.14.10, v1.16.9, v1.18.4]
    steps:
      - uses: actions/checkout@v1

      - name: Checkout pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.issue.number }}
        run: |
          curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.1
          sudo mv bin/hub /usr/local/bin
          hub pr checkout $PR_NUMBER

      - name: Create Kubernetes ${{ matrix.k8s }} cluster
        id: kind
        uses: engineerd/setup-kind@v0.3.0
        with:
          version: v0.8.1
          config: hack/kubernetes/kind.yaml
          image: kindest/node:${{ matrix.k8s }}

      - name: Prepare cluster for testing
        id: local-path
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          USERNAME: 1gtm
          REGISTRY_SECRET: regcred
        run: |
          echo "waiting for nodes to be ready ..."
          kubectl wait --for=condition=Ready nodes --all --timeout=5m
          kubectl get nodes
          echo
          kubectl version
          echo
          echo "create docker-registry secret"
          kubectl create secret docker-registry ${REGISTRY_SECRET} --namespace=kube-system --docker-server=https://index.docker.io/v1/ --docker-username=${USERNAME} --docker-password=${DOCKER_TOKEN}

      - name: Install NFS server dependencies
        run: |
          nodes=$(kubectl get nodes -o=jsonpath='{range .items[*]}{.metadata.name}{"\t"}{end}')
          for i in $nodes
          do
            echo "Installing NFS server dependencies in node: $i ...."
            docker exec $i apt-get update
            docker exec $i apt-get install -y nfs-kernel-server
          done

      - name: Check out installer
        run: |
          cd ..
          git clone https://github.com/stashed/installer.git
          cd installer
          git checkout master

      - name: Run e2e tests
        env:
          REGISTRY: appscodeci
          REGISTRY_SECRET: regcred
          TEST_CREDENTIALS: ${{ secrets.TEST_CREDENTIALS }}
          GOOGLE_SERVICE_ACCOUNT_JSON_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON_KEY }}
        run: |
          echo "preparing test credentials"
          mkdir -p hack/config
          echo -n "$TEST_CREDENTIALS" > hack/config/.env
          echo >> hack/config/.env
          echo "GOOGLE_SERVICE_ACCOUNT_JSON_KEY=$(echo $GOOGLE_SERVICE_ACCOUNT_JSON_KEY)" >> hack/config/.env
          make install
          echo
          sleep 10
          make e2e-parallel
