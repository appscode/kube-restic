name: CI

on:
  push:
    branches-ignore:
      - 'release-*'
    tags-ignore:
      - '*.*'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@master
      with:
        version: latest

    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: Run checks
      env:
        ARG_OS: linux
        ARG_ARCH: amd64
        RESTIC_VER: "0.8.3"
        NEW_RESTIC_VER: "0.9.5"
      run: |
        set -x
        echo "install restic"
        sudo apt-get -qq update
        sudo apt-get install -y curl bzip2
        curl -fsSL -o restic.bz2 https://github.com/restic/restic/releases/download/v${RESTIC_VER}/restic_${RESTIC_VER}_${ARG_OS}_${ARG_ARCH}.bz2
        bzip2 -d restic.bz2
        chmod +x restic
        sudo mv restic /bin/restic
        curl -fsSL -o restic_${NEW_RESTIC_VER}.bz2 https://github.com/restic/restic/releases/download/v${NEW_RESTIC_VER}/restic_${NEW_RESTIC_VER}_${ARG_OS}_${ARG_ARCH}.bz2
        bzip2 -d restic_${NEW_RESTIC_VER}.bz2
        chmod +x restic_${NEW_RESTIC_VER}
        sudo mv restic_${NEW_RESTIC_VER} /bin/restic_${NEW_RESTIC_VER}
        echo
        make ci

    - name: Build
      env:
        REGISTRY: appscodeci
        DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        USERNAME: 1gtm
      run: |
        docker login --username ${USERNAME} --password ${DOCKER_TOKEN}
        make push

    - name: Create Kubernetes cluster
      id: kind
      uses: engineerd/setup-kind@v0.1.0
      with:
        config: hack/kubernetes/kind.yaml

    - name: Prepare cluster for testing
      id: local-path
      env:
        DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        USERNAME: 1gtm
        REGISTRY_SECRET: regcred
      run: |
        export KUBECONFIG="$(kind get kubeconfig-path)"
        echo
        echo "waiting for nodes to be ready ..."
        kubectl wait --for=condition=Ready nodes --all --timeout=5m
        kubectl get nodes
        echo
        echo "installing local-path provisioner ..."
        kubectl delete storageclass --all
        kubectl apply -f https://github.com/rancher/local-path-provisioner/raw/v0.0.11/deploy/local-path-storage.yaml
        kubectl wait --for=condition=Ready pods -n local-path-storage --all --timeout=5m
        kubectl apply -f hack/kubernetes/storageclass/standard.yaml
        echo
        echo "create docker-registry secret"
        kubectl create secret docker-registry ${REGISTRY_SECRET} --namespace=kube-system --docker-server=https://index.docker.io/v1/ --docker-username=${USERNAME} --docker-password=${DOCKER_TOKEN}

    - name: Check out installer
      run: |
        cd ..
        git clone https://github.com/stashed/installer.git
        cd installer
        git checkout master

    - name: Run e2e tests
      env:
        REGISTRY: appscodeci
        REGISTRY_SECRET: regcred
        TEST_CREDENTIALS: ${{ secrets.TEST_CREDENTIALS }}
        GOOGLE_SERVICE_ACCOUNT_JSON_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON_KEY }}
      run: |
        export KUBECONFIG="$(kind get kubeconfig-path)"
        echo "preparing test credentials"
        mkdir -p hack/config
        echo -n "$TEST_CREDENTIALS" > hack/config/.env
        echo >> hack/config/.env
        echo "GOOGLE_SERVICE_ACCOUNT_JSON_KEY=$(echo $GOOGLE_SERVICE_ACCOUNT_JSON_KEY)" >> hack/config/.env
        make install
        echo
        make e2e-tests
